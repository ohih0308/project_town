<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ohih.town.domain.user.mapper.UserMapper">

    <!--  boolean isFiledDuplicated(Map<String, String> map);  -->
    <select id="isFiledDuplicated" parameterType="Map" resultType="boolean">
        select count(#{field})
        from users
        where #{field} = #{value};
    </select>
    <!--  void registerUser(Register register);  -->
    <insert id="registerUser" parameterType="Register" useGeneratedKeys="true" keyProperty="id">
        insert into users (user_type, email, username, password, created_at)
        values (1, #{email}, #{username}, #{password}, now());
    </insert>
    <!--  void initGuestbookConfig(Long userId);  -->
    <insert id="initGuestbookConfig" parameterType="Long">
        insert into guestbook_configs (user_id, activation, private_read, member_write, guest_write)
        values (#{userId}, 1, 0, 1, 1);
    </insert>


    <!--  UserLoginResult getUserByEmailAndPassword(Map<String, String> map);  -->
    <select id="getUserByEmailAndPassword" parameterType="Map" resultType="LoginResult">
        select u.id,
               u.user_type,
               u.email,
               u.username,
               pi.uuid,
               pi.extension,
               pi.directory
        from users as u
                 left join profile_images as pi on u.id = pi.user_id
        where u.email = #{email}
          and u.password = #{password};
    </select>


    <!--  ProfileImage findProfileImageByUserId(Long userId);  -->
    <select id="findProfileImageByUserId" parameterType="Long" resultType="ProfileImage">
        select *
        from profile_image
        where user_id = #{userId};
    </select>
    <!--  void uploadProfileImage(ProfileImage profileImage);  -->
    <insert id="uploadProfileImage" parameterType="ProfileImage">
        INSERT INTO profile_images(uuid, user_id, file_name, extension, directory)
        VALUES (#{uuid}, #{userId}, #{fileName}, #{extension}, #{directory})
    </insert>
    <!--  String findProfileImageDirectoryByUserId(Long userId);  -->
    <select id="findProfileImageDirectoryByUserId" parameterType="Long" resultType="String">
        select directory
        from profile_images
        where user_id = #{userId};
    </select>
    <!--  void updateProfileImage(ProfileImage profileImage);  -->
    <update id="updateProfileImage" parameterType="ProfileImage">
        UPDATE profile_images
        SET uuid      = #{uuid},
            file_name = #{fileName},
            extension = #{extension},
            directory = #{directory}
        WHERE user_id = #{userId}
    </update>
    <!--  void deleteProfileImage(Long userId);  -->
    <delete id="deleteProfileImage" parameterType="Long">
        delete
        from profile_image
        where user_id = #{userId};
    </delete>


    <!--  void updateUsername (Map map);  -->
    <update id="updateUsername" parameterType="Map">
        update users
        set username = #{username}
        where id = #{user_id};
    </update>
    <!--  void updatePassword (Map map);  -->
    <update id="updatePassword" parameterType="Map">
        update users
        set password = #{password}
        where id = #{user_id};
    </update>


    <!--  boolean deactivate(Long userId);  -->
    <delete id="deactivate" parameterType="Long">
        delete
        from user
        where user_id = #{userId};
    </delete>


    <!--  boolean updateGuestbookPermission(GuestbookPermission guestbookPermission);  -->
    <update id="updateGuestbookPermission" parameterType="GuestbookPermission">
        UPDATE guestbook_configs
        SET private_read = #{privateRead},
            member_write = #{memberWrite},
            guest_write  = #{guestWrite}
        WHERE user_id = #{userId}
    </update>

    <!--  boolean updateGuestbookActivation(Map map);  -->
    <update id="updateGuestbookActivation" parameterType="Map">
        update guestbook_configs
        set activation = #{activation}
        where user_id = #{user_id};
    </update>
</mapper>
